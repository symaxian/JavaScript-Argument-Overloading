function overloadArgumentCount(functions,debugName){if(overloadArgumentCount.verifyOverloadedFunctions){var func=function ArgumentCountOverloadedFunction(){if(typeof func.functions[arguments.length]==="function")return func.functions[arguments.length].apply(this,arguments);if(typeof func.debugName==="string")throw new TypeError('Overloaded function "'+func.debugName+'" has no sub-function available for argument count: '+arguments.length);throw new TypeError("No sub-function not available for argument count: "+
arguments.length);};if(typeof debugName==="string")func.debugName=debugName}else var func=function ArgumentCountOverloadedFunction(){return func.functions[arguments.length].apply(this,arguments)};func.functions=functions;return func}overloadArgumentCount.verifyOverloadedFunctions=true;
function overloadArgumentType(functions,debugName){if(overloadArgumentType.verifyOverloadedFunctions){var func=function ArgumentTypeOverloadedFunction(firstArg){if(typeof func.functions[typeof firstArg]==="function")return func.functions[typeof firstArg].apply(this,arguments);if(typeof func.debugName==="string")throw new TypeError('Overloaded function "'+func.debugName+'" has no sub-function available for argument type: '+typeof firstArg);throw new TypeError("No sub-function not available for argument type: "+
typeof firstArg);};if(typeof debugName==="string")func.debugName=debugName}else var func=function ArgumentTypeOverloadedFunction(firstArg){return func.functions[typeof firstArg].apply(this,arguments)};func.functions=functions;return func}overloadArgumentType.verifyOverloadedFunctions=true;
